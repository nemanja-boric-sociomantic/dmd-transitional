From 356560560256fd26cad27f19d7ac16d8ddd51817 Mon Sep 17 00:00:00 2001
From: Walter Bright <walter@walterbright.com>
Date: Sat, 2 Jun 2018 22:28:07 -0700
Subject: [PATCH 1/2] test for cgxmm line 684 assert failure

---
 test/compilable/cgxmm684.d | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)
 create mode 100644 test/compilable/cgxmm684.d

diff --git a/test/compilable/cgxmm684.d b/test/compilable/cgxmm684.d
new file mode 100644
index 0000000000..2b010fb72d
--- /dev/null
+++ b/test/compilable/cgxmm684.d
@@ -0,0 +1,29 @@
+// REQUIRED_ARGS: -fPIC -O -release -inline -m64 -betterC
+
+// produces assert failure cgxmm.c line 684
+
+import core.stdc.math;
+
+struct S
+{
+    double re, im;
+
+
+    static S sqrtcx(S* z)
+    {
+        S c;
+        real x,y,w,r;
+
+        {
+            x = fabs(z.re);
+            y = fabs(z.im);
+            if (z.re >= 0)
+            {
+                c.im = (z.im >= 0) ? w : -w;
+                c.re = z.im / (c.im + c.im);
+            }
+        }
+        return c;
+    }
+}
+

From d2884aa5a06f59ec6f4c4ae48ef864037c4d238f Mon Sep 17 00:00:00 2001
From: Walter Bright <walter@walterbright.com>
Date: Tue, 5 Jun 2018 00:52:08 -0700
Subject: [PATCH 2/2] fix Issue 18936 - Internal error: dmd/backend/cgxmm.c 684

---
 src/dmd/backend/gsroa.c                     | 23 +++++++++++++++++++++
 test/compilable/{cgxmm684.d => test18936.d} |  2 ++
 2 files changed, 25 insertions(+)
 rename test/compilable/{cgxmm684.d => test18936.d} (86%)

diff --git a/src/dmd/backend/gsroa.c b/src/dmd/backend/gsroa.c
index 901665e524..587148b8eb 100644
--- a/src/dmd/backend/gsroa.c
+++ b/src/dmd/backend/gsroa.c
@@ -63,6 +63,8 @@ static void sliceStructs_Gather(SymInfo *sia, elem *e)
                     {
                         if (!sia[si].accessSlice)
                         {
+                            /* [1] default as pointer type
+                             */
                             sia[si].ty0 = TYnptr;
                             sia[si].ty1 = TYnptr;
                         }
@@ -152,6 +154,27 @@ static void sliceStructs_Replace(SymInfo *sia, elem *e)
                         e->Eoper = OPpair;
                         e->E1 = e1;
                         e->E2 = e2;
+
+                        if (tycomplex(e->Ety))
+                        {
+                            /* Ensure complex OPpair operands are floating point types
+                             * because [1] may have defaulted them to a pointer type.
+                             * https://issues.dlang.org/show_bug.cgi?id=18936
+                             */
+                            tym_t tyop;
+                            switch (tybasic(e->Ety))
+                            {
+                                case TYcfloat:   tyop = TYfloat;   break;
+                                case TYcdouble:  tyop = TYdouble;  break;
+                                case TYcldouble: tyop = TYldouble; break;
+                                default:
+                                    assert(0);
+                            }
+                            if (!tyfloating(e1->Ety))
+                                e1->Ety = tyop;
+                            if (!tyfloating(e2->Ety))
+                                e2->Ety = tyop;
+                        }
                     }
                     else if (e->Eoffset == 0)  // the first slice of the symbol is the same as the original
                     {
diff --git a/test/compilable/cgxmm684.d b/test/compilable/test18936.d
similarity index 86%
rename from test/compilable/cgxmm684.d
rename to test/compilable/test18936.d
index 2b010fb72d..12f4b4bc9b 100644
--- a/test/compilable/cgxmm684.d
+++ b/test/compilable/test18936.d
@@ -1,5 +1,7 @@
 // REQUIRED_ARGS: -fPIC -O -release -inline -m64 -betterC
+// DISABLED: win32 win64
 
+// https://issues.dlang.org/show_bug.cgi?id=18936
 // produces assert failure cgxmm.c line 684
 
 import core.stdc.math;
